#!/usr/bin/$(MAKE) $(MAKEFLAGS)-f

prefix = @prefix@

CC             = @CC@
MAKEDEPEND     = @CC@ -MM
CFLAGS         = -Wall -Wno-unused --std=gnu99
CPPFLAGS       = @CPPFLAGS@
INCLUDES       = -I. -Iinclude -Isrc -Ibtech/src/include -Ibtech/src/btech
LIBS           = ${prefix}/lib/libbtech.so.0 @LIBS@
LDFLAGS        = @LDFLAGS@ -Wl,-rpath,${prefix}/lib


VERSION_FLAGS  = -DSVN_REVISION="\"`svnversion .`\"" \
                 -DMUX_BUILD_DATE="\"`date`\"" \
                 -DMUX_BUILD_NUM="\"`sh src/buildnum.sh`\""

ifdef DEBUG
VERSION_FLAGS += -DMUX_BUILD_USER="\"`whoami`\"" -DMUX_BUILD_HOST="\"`hostname -f`\""
CFLAGS        += -g3
CPPFLAGS      += -DDEBUG
OBJSUFFIX      = .debug
else
CFLAGS        += -g -O3
OBJSUFFIX      =
endif


COMMON_FLAGS   = $(CFLAGS)
DEPEND_FLAGS   = $(COMPILE_FLAGS)
COMPILE_FLAGS  = $(COMMON_FLAGS) $(INCLUDES) $(CPPFLAGS)
LINK_FLAGS     = $(COMMON_FLAGS) $(LDFLAGS)
ALLFLAGS       = $(COMMON_FLAGS) $(INCLUDES) $(CPPFLAGS) $(LDFLAGS)


MISC_OBJECTS   = misc/myfifo.o

EVENT_OBJECTS  = event/event.o

TREE_OBJECTS   = tree/mux_tree.o \
                 tree/tree.o     \

MUX_OBJECTS    = src/boolexp.o     \
                 src/bsd.o         \
                 src/commac.o      \
                 src/command.o     \
                 src/compat.o      \
                 src/comsys.o      \
                 src/conf.o        \
                 src/cque.o        \
                 src/create.o      \
                 src/db.o          \
				 src/db_xml.o	   \
				 src/db_xdr.o	   \
                 src/db_rw.o       \
                 src/dllist.o      \
				 src/dnschild.o	   \
                 src/eval.o        \
                 src/file_c.o      \
                 src/flags.o       \
                 src/funceval.o    \
                 src/functions.o   \
                 src/game.o        \
                 src/help.o        \
                 src/log.o         \
@LOGCACHE@
                 src/look.o        \
                 src/macro.o       \
                 src/mail.o        \
                 src/match.o       \
                 src/mguests.o     \
                 src/move.o        \
				 src/mmdb.o		   \
				 src/nametab.o     \
                 src/netcommon.o   \
				 src/nrbtab.o      \
                 src/object.o      \
                 src/player.o      \
				 src/player_c.o    \
                 src/powers.o      \
                 src/predicates.o  \
                 src/python.o      \
				 src/rbtree.o	   \
                 src/rbtab.o	   \
				 src/rob.o         \
                 src/set.o         \
				 src/signal.o	   \
                 src/speech.o      \
@SQLCHILD@
                 src/stringutil.o  \
                 src/timer.o       \
                 src/unparse.o     \
                 src/vattr.o       \
                 src/walkdb.o      \
                 src/wild.o        \
                 src/wiz.o         \

ALLOBJS = $(MISC_OBJECTS) $(EVENT_OBJECTS) $(TREE_OBJECTS) $(MUX_OBJECTS)

ALLSRCS = $(ALLOBJS:.o=.c)


TARGETS = src/netmux$(OBJSUFFIX) src/mkindx$(OBJSUFFIX)


.PHONY: all install all-common install-common install-btech install-mkdir
.PHONY: debug install-debug release install-release
.PHONY: mudflap clean cleandep distclean maintainer-clean


all: debug

install: install-debug

all-common: Makefile autoconf.h $(TARGETS)


Makefile: Makefile.in config.status
	./config.status --file=Makefile

autoconf.h: autoconf.h.in config.status
	./config.status --file=autoconf.h

config.status: configure
	./config.status --recheck

configure: configure.in
	autoreconf


debug:
	@DEBUG=1 $(MAKE) all-common

install-debug:
	@DEBUG=1 $(MAKE) install-common

release: all-common

install-release: install-common


mudflap:
	$(CC) -g3 -DDEBUG -DSVN_REVISION="\"`svnversion .`\"" $(ALLFLAGS) $(VERSION_FLAGS) -fmudflap -o src/netmux.mudflap $(ALLSRCS) src/version.c $(LIBS) -lmudflap


install-common: $(TARGETS)
	cp $(TARGETS) game.run/bin

install-btech: install-mkdir
	$(MAKE) -C btech install

# Install copies the 'game' directory to game.run, after trying to get all
# files from svn. If the svn command fails, we don't really care.
SVNROOT=https://svn.sourceforge.net/svnroot/btonline-btech
install-mkdir:
	@if [ ! -d game ]; then \
            echo "No game directory, attempting to download one from the Subversion repository."; \
            echo "Getting game directory..."; \
            svn co $(SVNROOT)/game/trunk game; \
            echo "Getting maps..."; \
            svn co $(SVNROOT)/maps/trunk game/maps; \
            echo "Getting text files..."; \
            svn co $(SVNROOT)/text/trunk game/text; \
            echo "Getting mech templates..."; \
            svn co $(SVNROOT)/mechs/trunk game/mechs; \
        fi
	@if [ ! -d game ]; then \
	    echo "No game directory. Please acquire one from http://sourceforge.net/projects/btonline-btech."; \
	    exit 1; \
	fi
	@if [ ! -d game.run ]; then \
	    cp -pPR game game.run || exit 1; \
	    chmod -R u+w game.run || exit 1; \
	fi
	@if [ ! -d game.run/bin ]; then \
	    mkdir game.run/bin; \
	fi

update:
	svn update


netmux$(OBJSUFFIX) src/netmux$(OBJSUFFIX): $(ALLOBJS:.o=$(OBJSUFFIX).o) src/version.c src/buildnum.sh install-btech
	$(CC) $(COMPILE_FLAGS) $(VERSION_FLAGS) -c src/version.c -o src/version$(OBJSUFFIX).o
	$(CC) $(LINK_FLAGS) -o src/netmux$(OBJSUFFIX) $(ALLOBJS:.o=$(OBJSUFFIX).o) src/version$(OBJSUFFIX).o $(LIBS)

mkindx$(OBJSUFFIX) src/mkindx$(OBJSUFFIX): src/mkindx.c
	$(CC) $(ALLFLAGS) -o src/mkindx$(OBJSUFFIX) src/mkindx.c

dbconvert src/dbconvert:
	@echo "dbconvert is no longer supported." && exit 1


clean:
	rm -f $(ALLOBJS) $(ALLOBJS:.o=.debug.o) src/version.debug.o src/version.o $(TARGETS) $(TARGETS:=.debug) .depend

cleandep: clean
	rm -f $(ALLOBJS:%.o=%.d)

distclean: cleandep
	-rm -f config.log config.cache config.status Makefile src/autoconf.h
	-rm -f buildnum.data

maintainer-clean: distclean
	-rm -rf autom4te.cache configure


$(ALLSRCS:%.c=%.d): %.d: %.c
	$(CC) -MM -MF $@ -MT "$@ $(@:%.d=%$$\(OBJSUFFIX\).o)" $(DEPEND_FLAGS) $<

$(ALLOBJS:.o=$(OBJSUFFIX).o): %$(OBJSUFFIX).o: %.c
	$(CC) $(COMPILE_FLAGS) -c $< -o $@

-include $(ALLSRCS:%.c=%.d)
