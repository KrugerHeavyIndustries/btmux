
                               UPGRADING

When upgrading to btechmux 1.4.4 or later from earlier releases, the
following should be noted:

  - DropShip landings and takeoff attempts, aborts and successes are now
    logged to the 'DSInfo' channel, rather than 'MechDebugInfo'. The format
    has also changed to omit the colon (':') as @triggering on that in scode
    is tricky. Scode that triggered on these messages should be updated.
    DropShip deaths are now logged to both MechDebugInfo and DSInfo. Newly
    logged, also to DSInfo, are map enter/leave events for DropShips.

When upgrading to btechmux 1.4.3 or later from earlier releases, the
following should be noted:

  - Unit weight calculation has been rewritten fairly close to FASA spec.
    Not everything is correct yet, but especially tanks were much improved.
    As a result, templates that used to be okay have a high chance of being
    overweight now. This even goes for some 'mechs. The problem with all
    those templates is that they aren't following the FASA Rules for
    vehicle/mech creation, so fixing it means fixing the templates.

  - Several new features were added as compile-time options: VRT, per-part
    weight, HUDINFO and @log/logf(). VRT and part weight can be turned on by
    editing src/hcode/include/btconfig.h. HUDINFO and @log/logf() default to
    on, but can be turned off in mux.general and config.h, respectively.

  - 'enterbase' and 'enterbay' now use the would-be-entered object's @fail
    attribute if the enterba(y/se) fails, or the old message if no @fail is
    set. This can have unexpected results if rooms previously had a @fail
    set for other purposes.

  - The skill list now contains Piloting-Battlesuit as well as
    Piloting-BSuit. Only Piloting-BSuit is used in actual Battlesuit
    piloting. This will change in the future, using a compile-time switch.
    The difference between Piloting-BSuit and Piloting-Battlesuit is the
    characterstic they are based on (Physical vs. Athletic)

  - Some features of the CUSTOM XCODE object were removed (notably the
    ability to tell the difference between oldtech and newtech.) CUSTOM
    objects will entirely likely disappear in the future, unless someone
    steps up with reasons to keep them. Likewise for CHARGEN and TURRET.


When upgrading to btechmux 1.4+ from previous releases, the following things
should be noted:

  - The hcode.db format has changed. There is no way to upgrade old
    hcode.db's to new ones. To cleanly upgrade, all XCODE objects should be
    set !XCODE before upgrading, the MUX shutdowned, hcode.db deleted, and
    the objects set XCODE again. MECH and MAP objects should then of course
    be reloaded, and MECHREP objects should have their fixed target (if any)
    set.

  - btechmux gained a lot of new config flags for new and altered behaviour.
    Most flags default to the old behaviour, but you should read them
    through anyway.

  - the 'status' and 'critstatus' 'xcodevalues' on MECH objects have been
    split into 'status', 'critstatus', 'specialsstatus' and
    'tankcritstatus'. A few of the bits have been moved around; see the
    wiznews.txt file in game/text/

