
This left to do. This is a fairly loose list, mostly with mental notes to
the main administrator himself.

==========
game/
   -  Provide more useful scode (long long term)

   -  Move game/ to a separate CVS module ? Would make sense.

   -  Update wiznews with some of the new btfunctions(), and add more
      HOWTO's and manuals and such.

==========
event/
tree/
misc/
   -  Scrutinize code to remove buffer overflows and other subtle bugs
      (long long term)

==========
src/
   -  Fix re-integrating configure by adding the right #ifdefs to actual
      code, so we can actually run on something other than Linux.
      (not hard, but tedious, and requires a test platform.)

   -  General code cleanup -- some of the MUX stuff is ugly. This might be
      better fixed by porting the btech sections to MUX2.1

   -  Finish Python support by adding more and easier hooks into MUX
      internal data and functions.

==========
src/hcode/
src/hcode/btech/
src/hcode/include/

   -  Remove old 'Last modified' and 'Created' lines, replacing them by RCS
      tags.

   -  Update copyright messages and attributions.

   -  Fix hcode.db format! The current memory-dump is too unportable and
      too errorprone.

   -  Check code for buffer overflows; there is likely a lot of them
      left, still.

   -  Finish implementing some of the basic Battletech rules such as
      skidding.

   -  Sensor rewrite! I know how to do it (same as map.los.c does it) but I
      need to find the time and mental cohesiveness to actually do it.

   -  Restructure of the MECH struct to be more OO. a 'Mech, tank, MW-in-RS
      and DS really share very little, and making a 'RSUnit' makes adding
      things like shot-off-arms very easy. (lot lot lot of work!)

   -  Removal of dead code... the CUSTOM, SCEN, SS* and TURRET XTYPEs come
      to mind.

   -  Better support for Python. More hooks and introspection into the xcode
      objects and such.

==========
General

   -  Documentation! It is severely lacking.

   -  graft btech code onto another MU*. MUX2.1 is a good candidate; it's a
      solid codebase, with a good, solid (and professional) lead coder. It
      has its own 'event' mechanism that might be exploited by the btech
      side. It uses C++, but not flagrantly so, and has a 'hash' type that
      might be used for the xcodetree.

